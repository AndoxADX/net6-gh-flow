name: Sample Web App

on:
  # Triggers the workflow on push
  push:
      branches:
      - dev
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# env:
#   # The name of the resource group to be created. All resources will be place
#   # in the resource group and start with name.
#   RG_NAME: "webapp"

#   # The location to store the meta data for the deployment.
#   LOCATION: "southeastsia"

jobs:
  build:
    name: build phase
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ./myapp
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish app
        run: |
          cd myapp 
          dotnet publish --configuration Release /property:GenerateFullPaths=true

      - name: Publish app artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: "./myapp/bin/Release/net6.0/publish/"

      - name: Publish Infra artifact
        uses: actions/upload-artifact@v3
        with:
          name: infra
          path: "./bicep/"

  deployDevInfrastructure:
    needs: build
    name: deploy dev infrastructure
    runs-on: ubuntu-latest

    outputs:
      appName: ${{ steps.azure-deployment-result.outputs.appName }}
      publishProfiles: ${{ steps.azure-deployment-result.outputs.publishProfiles }}

    steps:
      - name: Download infra
        uses: actions/download-artifact@v3
        with:
          name: infra
          path: infra 
          # Artifact infra was downloaded to /home/runner/work/net6-gh-flow/net6-gh-flow/infra

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Bicep file
        id: azure-deployment-bicep
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          # resourceGroupName: MyVeryBestResourceGroup
          region: southeastasia
          template: infra/deploy.bicep
          parameters: infra/deploy.parameters.json
          deploymentName: gh-action
          # failOnStdErr: false
          # path: infra
          # Unexpected input(s) 'path', valid inputs are ['scope', 'subscriptionId', 'managementGroupId', 'region', 'resourceGroupName', 'template', 'deploymentMode', 'deploymentName', 'parameters', 'failOnStdErr', 'additionalArguments']

      - name: Get publish profiles
        id: azure-deployment-result
        shell: pwsh
        run: |
          # Get appName
          # echo ${{ steps.deploy.outputs.appName }}
          $appName = "${{ steps.deploy.outputs.appName}}"
          # Get rgName
          # echo ${{ steps.deploy.outputs.rgName }}
          $rgName = "${{ steps.deploy.outputs.rgName }}"
          # # Get full outputs
          # $output = "${{ steps.deploy.outputs }}" | ConvertFrom-Json
          # echo $output

          # Get publish profiles
          $profiles = az webapp deployment list-publishing-profiles `
            -g $rgName `
            -n $appName --xml
          # Set all the outputs
          "appName=$appName" >> $env:GITHUB_OUTPUT
          "publishProfiles=$profiles" >> $env:GITHUB_OUTPUT
        working-directory: ./infra/
      
  deployDevApp:
    needs: deployDevInfrastructure
    name: deploy dev application
    runs-on: ubuntu-latest
    
    steps:
      - name: Download app
        uses: actions/download-artifact@v3
        with:
          name: app
          path: app

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: '${{ needs.deployDevInfrastructure.outputs.appName }}'
          slot-name: 'Production'
          publish-profile: ${{ needs.deployDevInfrastructure.outputs.publishProfiles }}
          package: ./app